{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0430\\u0440\\u0445\\u0456\\u0432\\\\reactprj\\\\32-pomodoro-timer\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './Timer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const modes = {\n    work: 1500,\n    shortBreak: 300,\n    longBreak: 900\n  };\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [activeMode, setActiveMode] = useState('No activated mode');\n  const [count, setCount] = useState(0);\n  const [countWork, setCountWork] = useState(0);\n  const [initialTime, setInitialTime] = useState(modes.work);\n  const [customWork, setCustomWork] = useState(modes.work);\n  const [customShortBreak, setCustomShortBreak] = useState(modes.work);\n  const [customLongBreak, setCustomLongBreak] = useState(modes.work);\n  const workAct = () => {\n    setIsRunning(false);\n    setTime(modes.work);\n    setInitialTime(modes.work);\n    setActiveMode('work');\n  };\n  const shortBreakAct = () => {\n    setIsRunning(false);\n    setTime(modes.shortBreak);\n    setInitialTime(modes.shortBreak);\n    setActiveMode('short break');\n  };\n  const longBreakAct = () => {\n    setIsRunning(false);\n    setTime(modes.longBreak);\n    setInitialTime(modes.longBreak);\n    setActiveMode('long break');\n  };\n  const progress = (initialTime - time) / initialTime * 100;\n  useEffect(() => {\n    let interval;\n    if (isRunning && time > 0) {\n      interval = setInterval(() => {\n        setTime(prev => prev - 1);\n      }, 1000);\n    }\n    if (time === 0) {\n      setIsRunning(false);\n      if (activeMode === 'work') {\n        setCount(prev => prev + 1);\n        setCountWork(prev => prev + 1);\n        if (count === 3) {\n          setTime(modes.longBreak);\n          setActiveMode('long break');\n          setCount(0);\n        } else {\n          setTime(modes.shortBreak);\n          setActiveMode('short break');\n        }\n        setIsRunning(true);\n      } else {\n        setTime(modes.work);\n        setActiveMode('work');\n        setIsRunning(true);\n      }\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isRunning], [time]);\n  const formatTime = time => {\n    const m = Math.floor(time / 60);\n    const s = time % 60;\n    return `${m}:${s < 10 ? '0' : ''}${s}`;\n    //`${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.wrapper} ${activeMode === 'work' ? styles.work : activeMode === 'short break' ? styles.short : activeMode === 'long break' ? styles.long : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"\\uD83C\\uDF45 Pomodoro Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.timer} ${isRunning ? styles.pulse : ''}`,\n      children: formatTime(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.mode,\n      children: [\"Current: \", activeMode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.mode,\n      children: [\"Progress: \", Math.round(progress), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.counter,\n      children: [\"Completed Pomodoros: \", countWork]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      alt: \"Type your time here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.controls,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(true),\n        children: \"\\u25B6 Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(false),\n        children: \"\\u23F8 Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsRunning(false);\n          setTime(0);\n          setActiveMode('No activated mode');\n          setCountWork(0);\n          setCount(0);\n        },\n        children: \"\\uD83D\\uDD04 Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modes,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: workAct,\n        children: \"\\uD83D\\uDCBC Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shortBreakAct,\n        children: \"\\u2615 Short Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: longBreakAct,\n        children: \"\\uD83D\\uDE34 Long Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"+T4jz5Iv1l3oZGq4DjvSQOGyofk=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","Timer","_s","modes","work","shortBreak","longBreak","time","setTime","isRunning","setIsRunning","activeMode","setActiveMode","count","setCount","countWork","setCountWork","initialTime","setInitialTime","customWork","setCustomWork","customShortBreak","setCustomShortBreak","customLongBreak","setCustomLongBreak","workAct","shortBreakAct","longBreakAct","progress","interval","setInterval","prev","clearInterval","formatTime","m","Math","floor","s","className","wrapper","short","long","children","title","fileName","_jsxFileName","lineNumber","columnNumber","timer","pulse","mode","round","counter","alt","controls","onClick","_c","$RefreshReg$"],"sources":["D:/Завантаження архів/reactprj/32-pomodoro-timer/src/components/Timer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styles from './Timer.module.css'\r\n\r\nconst Timer = () => {\r\n  const modes = {\r\n    work: 1500,\r\n    shortBreak: 300,\r\n    longBreak: 900,\r\n  }\r\n\r\n  const [time, setTime] = useState(0)\r\n  const [isRunning, setIsRunning] = useState(false)\r\n  const [activeMode, setActiveMode] = useState('No activated mode')\r\n  const [count, setCount] = useState(0)\r\n  const [countWork, setCountWork] = useState(0)\r\n  const [initialTime, setInitialTime] = useState(modes.work)\r\n  const [customWork, setCustomWork] = useState(modes.work)\r\n  const [customShortBreak, setCustomShortBreak] = useState(modes.work)\r\n  const [customLongBreak, setCustomLongBreak] = useState(modes.work)\r\n\r\n  const workAct = () => {\r\n    setIsRunning(false)\r\n    setTime(modes.work)\r\n    setInitialTime(modes.work)\r\n    setActiveMode('work')\r\n  }\r\n  const shortBreakAct = () => {\r\n    setIsRunning(false)\r\n    setTime(modes.shortBreak)\r\n    setInitialTime(modes.shortBreak)\r\n    setActiveMode('short break')\r\n  }\r\n  const longBreakAct = () => {\r\n    setIsRunning(false)\r\n    setTime(modes.longBreak)\r\n    setInitialTime(modes.longBreak)\r\n    setActiveMode('long break')\r\n  }\r\n  const progress = ((initialTime - time) / initialTime) * 100\r\n  useEffect(\r\n    () => {\r\n      let interval\r\n\r\n      if (isRunning && time > 0) {\r\n        interval = setInterval(() => {\r\n          setTime((prev) => prev - 1)\r\n        }, 1000)\r\n      }\r\n      if (time === 0) {\r\n        setIsRunning(false)\r\n\r\n        if (activeMode === 'work') {\r\n          setCount((prev) => prev + 1)\r\n          setCountWork((prev) => prev + 1)\r\n          if (count === 3) {\r\n            setTime(modes.longBreak)\r\n            setActiveMode('long break')\r\n            setCount(0)\r\n          } else {\r\n            setTime(modes.shortBreak)\r\n            setActiveMode('short break')\r\n          }\r\n          setIsRunning(true)\r\n        } else {\r\n          setTime(modes.work)\r\n          setActiveMode('work')\r\n          setIsRunning(true)\r\n        }\r\n      }\r\n      return () => {\r\n        clearInterval(interval)\r\n      }\r\n    },\r\n    [isRunning],\r\n    [time]\r\n  )\r\n\r\n  const formatTime = (time) => {\r\n    const m = Math.floor(time / 60)\r\n    const s = time % 60\r\n    return `${m}:${s < 10 ? '0' : ''}${s}`\r\n    //`${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.wrapper} ${\r\n        activeMode === 'work'\r\n          ? styles.work\r\n          : activeMode === 'short break'\r\n          ? styles.short\r\n          : activeMode === 'long break'\r\n          ? styles.long\r\n          : ''\r\n      }`}\r\n    >\r\n      <h1 className={styles.title}>🍅 Pomodoro Timer</h1>\r\n\r\n      <div className={`${styles.timer} ${isRunning ? styles.pulse : ''}`}>\r\n        {formatTime(time)}\r\n      </div>\r\n\r\n      <p className={styles.mode}>Current: {activeMode}</p>\r\n      <p className={styles.mode}>Progress: {Math.round(progress)}%</p>\r\n      <p className={styles.counter}>Completed Pomodoros: {countWork}</p>\r\n      <input alt=\"Type your time here\" />\r\n      <div className={styles.controls}>\r\n        <button onClick={() => setIsRunning(true)}>▶ Start</button>\r\n        <button onClick={() => setIsRunning(false)}>⏸ Pause</button>\r\n        <button\r\n          onClick={() => {\r\n            setIsRunning(false)\r\n            setTime(0)\r\n            setActiveMode('No activated mode')\r\n            setCountWork(0)\r\n            setCount(0)\r\n          }}\r\n        >\r\n          🔄 Reset\r\n        </button>\r\n      </div>\r\n      <div className={styles.modes}>\r\n        <button onClick={workAct}>💼 Work</button>\r\n        <button onClick={shortBreakAct}>☕ Short Break</button>\r\n        <button onClick={longBreakAct}>😴 Long Break</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}