{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0430\\u0440\\u0445\\u0456\\u0432\\\\reactprj\\\\32-pomodoro-timer\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const modes = {\n    work: 1500,\n    shortBreak: 300,\n    longBreak: 900\n  };\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [activeMode, setActiveMode] = useState('No activated mode');\n  const [count, setCount] = useState(0);\n  const [countWork, setCountWork] = useState(0);\n  const workAct = () => {\n    setIsRunning(false);\n    setTime(modes.work);\n    setActiveMode('work');\n  };\n  const shortBreakAct = () => {\n    setIsRunning(false);\n    setTime(modes.work);\n    setActiveMode('work');\n  };\n  const LongBreakAct = () => {\n    setIsRunning(false);\n    setTime(modes.work);\n    setActiveMode('work');\n  };\n  useEffect(() => {\n    let interval;\n    if (isRunning && time > 0) {\n      interval = setInterval(() => {\n        setTime(prev => prev - 1);\n      }, 1000);\n    }\n    if (time === 0) {\n      setIsRunning(false);\n      if (activeMode === 'work') {\n        setCount(prev => prev + 1);\n        setCountWork(prev => prev + 1);\n        if (count === 3) {\n          setTime(modes.longBreak);\n          setActiveMode('long break');\n          setCount(0);\n        } else {\n          setTime(modes.shortBreak);\n          setActiveMode('short break');\n        }\n        setIsRunning(true);\n      } else {\n        setTime(modes.work);\n        setActiveMode('work');\n        setIsRunning(true);\n      }\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isRunning], [time]);\n  const formatTime = time => {\n    const m = Math.floor(time / 60);\n    const s = time % 60;\n    return `${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [formatTime(time), activeMode, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRunning(true),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRunning(false),\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsRunning(false);\n        setTime(0);\n        setActiveMode('No activated mode');\n        setCountWork(0);\n        setCount(0);\n      },\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => workAct(),\n      children: \"Work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => shortBreakAct(),\n      children: \"Short Break\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => LongBreakAct(),\n      children: \"Long Break\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"z2hmTZ3kOFZ8nPXHl1xkoqC7A9Q=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Timer","_s","modes","work","shortBreak","longBreak","time","setTime","isRunning","setIsRunning","activeMode","setActiveMode","count","setCount","countWork","setCountWork","workAct","shortBreakAct","LongBreakAct","interval","setInterval","prev","clearInterval","formatTime","m","Math","floor","s","toString","padStart","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Завантаження архів/reactprj/32-pomodoro-timer/src/components/Timer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Timer = () => {\r\n  const modes = {\r\n    work: 1500,\r\n    shortBreak: 300,\r\n    longBreak: 900,\r\n  }\r\n\r\n  const [time, setTime] = useState(0)\r\n  const [isRunning, setIsRunning] = useState(false)\r\n  const [activeMode, setActiveMode] = useState('No activated mode')\r\n  const [count, setCount] = useState(0)\r\n  const [countWork, setCountWork] = useState(0)\r\n\r\n  const workAct = () => {\r\n    setIsRunning(false)\r\n    setTime(modes.work)\r\n    setActiveMode('work')\r\n  }\r\n  const shortBreakAct = () => {\r\n    setIsRunning(false)\r\n    setTime(modes.work)\r\n    setActiveMode('work')\r\n  }\r\n  const LongBreakAct = () => {\r\n    setIsRunning(false)\r\n    setTime(modes.work)\r\n    setActiveMode('work')\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      let interval\r\n\r\n      if (isRunning && time > 0) {\r\n        interval = setInterval(() => {\r\n          setTime((prev) => prev - 1)\r\n        }, 1000)\r\n      }\r\n      if (time === 0) {\r\n        setIsRunning(false)\r\n\r\n        if (activeMode === 'work') {\r\n          setCount((prev) => prev + 1)\r\n          setCountWork((prev) => prev + 1)\r\n          if (count === 3) {\r\n            setTime(modes.longBreak)\r\n            setActiveMode('long break')\r\n            setCount(0)\r\n          } else {\r\n            setTime(modes.shortBreak)\r\n            setActiveMode('short break')\r\n          }\r\n          setIsRunning(true)\r\n        } else {\r\n          setTime(modes.work)\r\n          setActiveMode('work')\r\n          setIsRunning(true)\r\n        }\r\n      }\r\n      return () => {\r\n        clearInterval(interval)\r\n      }\r\n    },\r\n    [isRunning],\r\n    [time]\r\n  )\r\n\r\n  const formatTime = (time) => {\r\n    const m = Math.floor(time / 60)\r\n    const s = time % 60\r\n    return `${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {formatTime(time)}\r\n      {activeMode}\r\n      <button onClick={() => setIsRunning(true)}>Start</button>\r\n      <button onClick={() => setIsRunning(false)}>Pause</button>\r\n      <button\r\n        onClick={() => {\r\n          setIsRunning(false)\r\n          setTime(0)\r\n          setActiveMode('No activated mode')\r\n          setCountWork(0)\r\n          setCount(0)\r\n        }}\r\n      >\r\n        Reset\r\n      </button>\r\n      <button onClick={() => workAct()}>Work</button>\r\n      <button onClick={() => shortBreakAct()}>Short Break</button>\r\n      <button onClick={() => LongBreakAct()}>Long Break</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}