{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0430\\u0440\\u0445\\u0456\\u0432\\\\reactprj\\\\32-pomodoro-timer\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styles from './Timer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const modes = {\n    work: 1500,\n    shortBreak: 300,\n    longBreak: 900\n  };\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [activeMode, setActiveMode] = useState('No activated mode');\n  const [count, setCount] = useState(0);\n  const [countWork, setCountWork] = useState(0);\n  const [initialTime, setInitialTime] = useState(modes.work);\n  const [customWork, setCustomWork] = useState(25);\n  const [customShortBreak, setCustomShortBreak] = useState(5);\n  const [customLongBreak, setCustomLongBreak] = useState(15);\n  const [workTime, setWorkTime] = useState(customWork * 60);\n  const [shortTime, setShortTime] = useState(customShortBreak * 60);\n  const [longTime, setLongTime] = useState(customLongBreak * 60);\n  const setCustomTime = () => {\n    setWorkTime(customWork * 60);\n    setShortTime(customShortBreak * 60);\n    setLongTime(customLongBreak * 60);\n  };\n  const workAct = () => {\n    setIsRunning(false);\n    setTime(customWork * 60);\n    setInitialTime(customWork * 60);\n    setActiveMode('work');\n  };\n  const shortBreakAct = () => {\n    setIsRunning(false);\n    setTime(customShortBreak * 60);\n    setInitialTime(customShortBreak * 60);\n    setActiveMode('short break');\n  };\n  const longBreakAct = () => {\n    setIsRunning(false);\n    setTime(customLongBreak * 60);\n    setInitialTime(customLongBreak * 60);\n    setActiveMode('long break');\n  };\n  const progress = initialTime > 0 ? (initialTime - time) / initialTime * 100 : 0;\n  const radius = 70;\n  const circumference = 2 * Math.PI * radius;\n  const offset = circumference - progress / 100 * circumference;\n  const beepRef = useRef(null);\n  useEffect(() => {\n    let interval;\n    if (isRunning && time > 0) {\n      interval = setInterval(() => {\n        setTime(prev => prev - 1);\n      }, 1000);\n    }\n    if (time === 0 && activeMode && activeMode !== 'No activated mode') {\n      setIsRunning(false);\n      if (beepRef.current) {\n        beepRef.current.play();\n      }\n      if (activeMode === 'work') {\n        setCount(prev => prev + 1);\n        setCountWork(prev => prev + 1);\n        if (count === 3) {\n          setTime(customLongBreak * 60);\n          setActiveMode('long break');\n          setCount(0);\n        } else {\n          setTime(customShortBreak * 60);\n          setActiveMode('short break');\n        }\n        setIsRunning(true);\n      } else {\n        setTime(customWork * 60);\n        setActiveMode('work');\n        setIsRunning(true);\n      }\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n  const formatTime = time => {\n    const m = Math.floor(time / 60);\n    const s = time % 60;\n    return `${m}:${s < 10 ? '0' : ''}${s}`;\n    //`${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.wrapper} ${activeMode === 'work' ? styles.work : activeMode === 'short break' ? styles.short : activeMode === 'long break' ? styles.long : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"\\uD83C\\uDF45 Pomodoro Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.timer} ${isRunning ? styles.pulse : ''}`,\n      children: formatTime(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.mode,\n      children: [\"Current: \", activeMode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.mode,\n      children: [\"Progress: \", Math.round(progress), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.counter,\n      children: [\"Completed Pomodoros: \", countWork]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-40 h-40 transform -rotate-90\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"text-gray-300\",\n          stroke: \"currentColor\",\n          strokeWidth: \"10\",\n          fill: \"transparent\",\n          r: radius,\n          cx: \"80\",\n          cy: \"80\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"text-blue-500\",\n          stroke: \"currentColor\",\n          strokeWidth: \"10\",\n          fill: \"transparent\",\n          r: radius,\n          cx: \"80\",\n          cy: \"80\",\n          strokeDasharray: circumference,\n          strokeDashoffset: offset,\n          style: {\n            transition: 'stroke-dashoffset 1s linear'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"50%\",\n          y: \"50%\",\n          textAnchor: \"middle\",\n          dominantBaseline: \"middle\",\n          fontSize: \"24\",\n          fontWeight: \"bold\",\n          fill: \"currentColor\",\n          transform: \"rotate(90, 80, 80)\" // щоб не було перевернуто\n          ,\n          children: formatTime(time)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settings,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2699\\uFE0F Set custom time (minutes)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Work:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: customWork,\n            onChange: e => {\n              setCustomWork(Number(e.target.value));\n              if (activeMode === 'work') {\n                setTime(Number(e.target.value) * 60);\n                setInitialTime(Number(e.target.value) * 60);\n              }\n            },\n            className: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Short Break:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: customShortBreak,\n            onChange: e => {\n              const val = Number(e.target.value);\n              setCustomShortBreak(val);\n              if (activeMode === 'short break') {\n                setTime(val * 60);\n                setInitialTime(val * 60);\n              }\n            },\n            className: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Long Break:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: customLongBreak,\n            onChange: e => {\n              const val = Number(e.target.value);\n              setCustomLongBreak(val);\n              if (activeMode === 'long break') {\n                setTime(val * 60);\n                setInitialTime(val * 60);\n              }\n            },\n            className: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setCustomTime,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRunning(true),\n          children: \"\\u25B6 Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRunning(false),\n          children: \"\\u23F8 Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setIsRunning(false);\n            setTime(0);\n            setInitialTime(0);\n            setActiveMode('No activated mode');\n            setCountWork(0);\n            setCount(0);\n          },\n          children: \"\\uD83D\\uDD04 Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.modes,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: workAct,\n          children: \"\\uD83D\\uDCBC Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: shortBreakAct,\n          children: \"\\u2615 Short Break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: longBreakAct,\n          children: \"\\uD83D\\uDE34 Long Break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: beepRef,\n        id: \"beep\",\n        src: \"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\",\n        preload: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"RIIxNGNQZr2HgP+f/MtasHKq+tE=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styles","jsxDEV","_jsxDEV","Timer","_s","modes","work","shortBreak","longBreak","time","setTime","isRunning","setIsRunning","activeMode","setActiveMode","count","setCount","countWork","setCountWork","initialTime","setInitialTime","customWork","setCustomWork","customShortBreak","setCustomShortBreak","customLongBreak","setCustomLongBreak","workTime","setWorkTime","shortTime","setShortTime","longTime","setLongTime","setCustomTime","workAct","shortBreakAct","longBreakAct","progress","radius","circumference","Math","PI","offset","beepRef","interval","setInterval","prev","current","play","clearInterval","formatTime","m","floor","s","className","wrapper","short","long","children","title","fileName","_jsxFileName","lineNumber","columnNumber","timer","pulse","mode","round","counter","stroke","strokeWidth","fill","r","cx","cy","strokeDasharray","strokeDashoffset","style","transition","x","y","textAnchor","dominantBaseline","fontSize","fontWeight","transform","settings","type","value","onChange","e","Number","target","input","val","onClick","controls","ref","id","src","preload","_c","$RefreshReg$"],"sources":["D:/Завантаження архів/reactprj/32-pomodoro-timer/src/components/Timer.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport styles from './Timer.module.css'\r\n\r\nconst Timer = () => {\r\n  const modes = {\r\n    work: 1500,\r\n    shortBreak: 300,\r\n    longBreak: 900,\r\n  }\r\n\r\n  const [time, setTime] = useState(0)\r\n  const [isRunning, setIsRunning] = useState(false)\r\n  const [activeMode, setActiveMode] = useState('No activated mode')\r\n  const [count, setCount] = useState(0)\r\n  const [countWork, setCountWork] = useState(0)\r\n  const [initialTime, setInitialTime] = useState(modes.work)\r\n\r\n  const [customWork, setCustomWork] = useState(25)\r\n  const [customShortBreak, setCustomShortBreak] = useState(5)\r\n  const [customLongBreak, setCustomLongBreak] = useState(15)\r\n\r\n  const [workTime, setWorkTime] = useState(customWork * 60)\r\n  const [shortTime, setShortTime] = useState(customShortBreak * 60)\r\n  const [longTime, setLongTime] = useState(customLongBreak * 60)\r\n\r\n  const setCustomTime = () => {\r\n    setWorkTime(customWork * 60)\r\n    setShortTime(customShortBreak * 60)\r\n    setLongTime(customLongBreak * 60)\r\n  }\r\n\r\n  const workAct = () => {\r\n    setIsRunning(false)\r\n    setTime(customWork * 60)\r\n    setInitialTime(customWork * 60)\r\n    setActiveMode('work')\r\n  }\r\n  const shortBreakAct = () => {\r\n    setIsRunning(false)\r\n    setTime(customShortBreak * 60)\r\n    setInitialTime(customShortBreak * 60)\r\n    setActiveMode('short break')\r\n  }\r\n  const longBreakAct = () => {\r\n    setIsRunning(false)\r\n    setTime(customLongBreak * 60)\r\n    setInitialTime(customLongBreak * 60)\r\n    setActiveMode('long break')\r\n  }\r\n  const progress =\r\n    initialTime > 0 ? ((initialTime - time) / initialTime) * 100 : 0\r\n  const radius = 70\r\n  const circumference = 2 * Math.PI * radius\r\n  const offset = circumference - (progress / 100) * circumference\r\n\r\n  const beepRef = useRef(null)\r\n  useEffect(() => {\r\n    let interval\r\n\r\n    if (isRunning && time > 0) {\r\n      interval = setInterval(() => {\r\n        setTime((prev) => prev - 1)\r\n      }, 1000)\r\n    }\r\n    if (time === 0 && activeMode && activeMode !== 'No activated mode') {\r\n      setIsRunning(false)\r\n      if (beepRef.current) {\r\n        beepRef.current.play()\r\n      }\r\n\r\n      if (activeMode === 'work') {\r\n        setCount((prev) => prev + 1)\r\n        setCountWork((prev) => prev + 1)\r\n        if (count === 3) {\r\n          setTime(customLongBreak * 60)\r\n          setActiveMode('long break')\r\n          setCount(0)\r\n        } else {\r\n          setTime(customShortBreak * 60)\r\n          setActiveMode('short break')\r\n        }\r\n        setIsRunning(true)\r\n      } else {\r\n        setTime(customWork * 60)\r\n        setActiveMode('work')\r\n        setIsRunning(true)\r\n      }\r\n    }\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [time])\r\n\r\n  const formatTime = (time) => {\r\n    const m = Math.floor(time / 60)\r\n    const s = time % 60\r\n    return `${m}:${s < 10 ? '0' : ''}${s}`\r\n    //`${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.wrapper} ${\r\n        activeMode === 'work'\r\n          ? styles.work\r\n          : activeMode === 'short break'\r\n          ? styles.short\r\n          : activeMode === 'long break'\r\n          ? styles.long\r\n          : ''\r\n      }`}\r\n    >\r\n      <h1 className={styles.title}>🍅 Pomodoro Timer</h1>\r\n      <div className={`${styles.timer} ${isRunning ? styles.pulse : ''}`}>\r\n        {formatTime(time)}\r\n      </div>\r\n      <p className={styles.mode}>Current: {activeMode}</p>\r\n      <p className={styles.mode}>Progress: {Math.round(progress)}%</p>\r\n      <p className={styles.counter}>Completed Pomodoros: {countWork}</p>\r\n      <div className=\"flex flex-col items-center\">\r\n        <svg className=\"w-40 h-40 transform -rotate-90\">\r\n          <circle\r\n            className=\"text-gray-300\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"10\"\r\n            fill=\"transparent\"\r\n            r={radius}\r\n            cx=\"80\"\r\n            cy=\"80\"\r\n          />\r\n          <circle\r\n            className=\"text-blue-500\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"10\"\r\n            fill=\"transparent\"\r\n            r={radius}\r\n            cx=\"80\"\r\n            cy=\"80\"\r\n            strokeDasharray={circumference}\r\n            strokeDashoffset={offset}\r\n            style={{ transition: 'stroke-dashoffset 1s linear' }}\r\n          />\r\n          <text\r\n            x=\"50%\"\r\n            y=\"50%\"\r\n            textAnchor=\"middle\"\r\n            dominantBaseline=\"middle\"\r\n            fontSize=\"24\"\r\n            fontWeight=\"bold\"\r\n            fill=\"currentColor\"\r\n            transform=\"rotate(90, 80, 80)\" // щоб не було перевернуто\r\n          >\r\n            {formatTime(time)}\r\n          </text>\r\n        </svg>\r\n        <div className={styles.settings}>\r\n          <p>⚙️ Set custom time (minutes)</p>\r\n          <label>\r\n            Work:\r\n            <input\r\n              type=\"number\"\r\n              value={customWork}\r\n              onChange={(e) => {\r\n                setCustomWork(Number(e.target.value))\r\n                if (activeMode === 'work') {\r\n                  setTime(Number(e.target.value) * 60)\r\n                  setInitialTime(Number(e.target.value) * 60)\r\n                }\r\n              }}\r\n              className={styles.input}\r\n            />\r\n          </label>\r\n          <label>\r\n            Short Break:\r\n            <input\r\n              type=\"number\"\r\n              value={customShortBreak}\r\n              onChange={(e) => {\r\n                const val = Number(e.target.value)\r\n                setCustomShortBreak(val)\r\n                if (activeMode === 'short break') {\r\n                  setTime(val * 60)\r\n                  setInitialTime(val * 60)\r\n                }\r\n              }}\r\n              className={styles.input}\r\n            />\r\n          </label>\r\n          <label>\r\n            Long Break:\r\n            <input\r\n              type=\"number\"\r\n              value={customLongBreak}\r\n              onChange={(e) => {\r\n                const val = Number(e.target.value)\r\n                setCustomLongBreak(val)\r\n                if (activeMode === 'long break') {\r\n                  setTime(val * 60)\r\n                  setInitialTime(val * 60)\r\n                }\r\n              }}\r\n              className={styles.input}\r\n            />\r\n          </label>\r\n          <button onClick={setCustomTime}>Save</button>\r\n        </div>\r\n        <div className={styles.controls}>\r\n          <button onClick={() => setIsRunning(true)}>▶ Start</button>\r\n          <button onClick={() => setIsRunning(false)}>⏸ Pause</button>\r\n          <button\r\n            onClick={() => {\r\n              setIsRunning(false)\r\n              setTime(0)\r\n              setInitialTime(0)\r\n              setActiveMode('No activated mode')\r\n              setCountWork(0)\r\n              setCount(0)\r\n            }}\r\n          >\r\n            🔄 Reset\r\n          </button>\r\n        </div>\r\n        <div className={styles.modes}>\r\n          <button onClick={workAct}>💼 Work</button>\r\n          <button onClick={shortBreakAct}>☕ Short Break</button>\r\n          <button onClick={longBreakAct}>😴 Long Break</button>\r\n        </div>\r\n        <audio\r\n          ref={beepRef}\r\n          id=\"beep\"\r\n          src=\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"\r\n          preload=\"auto\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}